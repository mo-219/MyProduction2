//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16 [unused]
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64
//   float4 ambientLightColor;          // Offset:   80 Size:    16 [unused]
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32 [unused]
//   row_major float4x4 world;          // Offset:  128 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// WEIGHTS                  0   xyzw        3     NONE   float       
// BONES                    0   xyzw        4     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[12], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xy
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; 
//   v2.x <- texcoord.x; v2.y <- texcoord.y; 
//   v3.x <- boneWeights.x; v3.y <- boneWeights.y; v3.z <- boneWeights.z; v3.w <- boneWeights.w; 
//   v4.x <- boneIndices.x; v4.y <- boneIndices.y; v4.z <- boneIndices.z; v4.w <- boneIndices.w; 
//   o3.x <- <main return value>.texcoord.x; o3.y <- <main return value>.texcoord.y; 
//   o2.x <- <main return value>.normal.x; o2.y <- <main return value>.normal.y; o2.z <- <main return value>.normal.z; 
//   o1.x <- <main return value>.worldPosition.x; o1.y <- <main return value>.worldPosition.y; o1.z <- <main return value>.worldPosition.z; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 13 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\SkyBoxVS.hlsl"
mov r0.xyzw, v0.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 14
mul r1.xyz, cb0[1].xywx, cb0[8].xxxx
mul r2.xyz, cb0[2].xywx, cb0[8].yyyy
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, cb0[3].xywx, cb0[8].zzzz
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, cb0[4].xywx, cb0[8].wwww
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, cb0[1].xywx, cb0[9].xxxx
mul r3.xyz, cb0[2].xywx, cb0[9].yyyy
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, cb0[3].xywx, cb0[9].zzzz
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, cb0[4].xywx, cb0[9].wwww
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, cb0[1].xywx, cb0[10].xxxx
mul r4.xyz, cb0[2].xywx, cb0[10].yyyy
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, cb0[3].xywx, cb0[10].zzzz
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, cb0[4].xywx, cb0[10].wwww
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, cb0[1].xywx, cb0[11].xxxx
mul r5.xyz, cb0[2].xywx, cb0[11].yyyy
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, cb0[3].xywx, cb0[11].zzzz
add r4.xyz, r4.xyzx, r5.xyzx
mul r5.xyz, cb0[4].xywx, cb0[11].wwww
add r4.xyz, r4.xyzx, r5.xyzx
mul r1.xyz, r1.xyzx, v0.xxxx
mul r2.xyz, r2.xyzx, v0.yyyy
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r3.xyzx, v0.zzzz
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r4.xyzx, v0.wwww
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- vout.worldPosition.x; r1.y <- vout.worldPosition.y; r1.z <- vout.worldPosition.z

#line 15
itof r1.w, l(0)
mul r2.xyzw, v1.xxxx, cb0[8].xyzw
mul r3.xyzw, v1.yyyy, cb0[9].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v1.zzzz, cb0[10].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r1.wwww, cb0[11].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
dp4 r1.w, r2.xyzw, r2.xyzw
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- vout.normal.x; r2.y <- vout.normal.y; r2.z <- vout.normal.z

#line 16
mov r3.xy, v2.xyxx  // r3.x <- vout.texcoord.x; r3.y <- vout.texcoord.y

#line 19
mov o0.xyzw, r0.xyzw
mov o1.xyz, r1.xyzx
mov o2.xyz, r2.xyzx
mov o3.xy, r3.xyxx
ret 
// Approximately 53 instruction slots used
