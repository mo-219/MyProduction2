//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64 [unused]
//   float4 ambientLightColor;          // Offset:   80 Size:    16
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// diffuseMap                        texture  float4          2d             t0      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 9
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.world_position.x; v1.y <- pin.world_position.y; v1.z <- pin.world_position.z; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.texcoord.x; v3.y <- pin.texcoord.y; 
//   v4.x <- pin.color.x; v4.y <- pin.color.y; v4.z <- pin.color.z; v4.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 8 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\PhongPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v4.xyzw  // r0.x <- diffuseColor.x; r0.y <- diffuseColor.y; r0.z <- diffuseColor.z; r0.w <- diffuseColor.w

#line 10
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 11
dp3 r1.w, cb0[6].xyzx, cb0[6].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb0[6].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 12
mov r3.xyz, -v1.xyzx
add r3.xyz, r3.xyzx, cb0[0].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- E.x; r3.y <- E.y; r3.z <- E.z

#line 15
itof r4.xyz, l(1, 1, 1, 0)  // r4.x <- ka.x; r4.y <- ka.y; r4.z <- ka.z

#line 16
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- kd.x; r5.y <- kd.y; r5.z <- kd.z

#line 17
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- ks.x; r6.y <- ks.y; r6.z <- ks.z

#line 18
itof r1.w, l(128)  // r1.w <- shiness

#line 21
mul r4.xyz, r4.xyzx, cb0[5].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 24
nop 
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, cb0[7].xyzx
mov r5.xyz, r5.xyzx

#line 22 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\Light.hlsli"
mov r8.xyz, -r2.xyzx
dp3 r2.w, r1.xyzx, r8.xyzx
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, l(1.000000)  // r2.w <- d

#line 25
mul r7.xyz, r2.wwww, r7.xyzx
mul r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <CalcLambertDiffuse return value>.x; r5.y <- <CalcLambertDiffuse return value>.y; r5.z <- <CalcLambertDiffuse return value>.z

#line 24 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\PhongPS.hlsl"
mov r5.xyz, r5.xyzx  // r5.x <- directionalDiffuse.x; r5.y <- directionalDiffuse.y; r5.z <- directionalDiffuse.z

#line 25
nop 
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, cb0[7].xyzx
mov r3.xyz, r3.xyzx
mov r1.w, r1.w
mov r6.xyz, r6.xyzx

#line 41 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\Light.hlsli"
dp3 r2.w, r2.xyzx, r1.xyzx
add r2.w, r2.w, r2.w
mov r2.w, -r2.w
mul r1.xyz, r1.xyzx, r2.wwww
add r1.xyz, r2.xyzx, r1.xyzx  // r1.x <- R.x; r1.y <- R.y; r1.z <- R.z

#line 45
dp3 r1.x, r3.xyzx, r1.xyzx
itof r1.y, l(0)
max r1.x, r1.y, r1.x  // r1.x <- d

#line 51
log r1.x, r1.x
mul r1.x, r1.x, r1.w
exp r1.x, r1.x  // r1.x <- d

#line 54
mul r1.xyz, r1.xxxx, r7.xyzx
mul r1.xyz, r6.xyzx, r1.xyzx  // r1.x <- <CalcPhongSpecular return value>.x; r1.y <- <CalcPhongSpecular return value>.y; r1.z <- <CalcPhongSpecular return value>.z

#line 25 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\PhongPS.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- directionalSpecular.x; r1.y <- directionalSpecular.y; r1.z <- directionalSpecular.z

#line 27
mov r4.xyz, r4.xyzx  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z
mov r0.w, r0.w  // r0.w <- color.w

#line 28
mul r0.xyz, r0.xyzx, r5.xyzx
add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 29
add r0.xyz, r1.xyzx, r0.xyzx

#line 31
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 59 instruction slots used
