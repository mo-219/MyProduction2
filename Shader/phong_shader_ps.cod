//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   float4 Ka;                         // Offset:   64 Size:    16
//   float4 Kd;                         // Offset:   80 Size:    16
//   float4 Ks;                         // Offset:   96 Size:    16
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 options;                    // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 ambient_color;              // Offset:    0 Size:    16
//   float4 directional_light_direction;// Offset:   16 Size:    16
//   float4 directional_light_color;    // Offset:   32 Size:    16
//   
//   struct point_lights
//   {
//       
//       float4 position;               // Offset:   48
//       float4 color;                  // Offset:   64
//       float range;                   // Offset:   80
//       float3 dummy;                  // Offset:   84
//
//   } point_light[8];                  // Offset:   48 Size:   384 [unused]
//   
//   struct spot_lights
//   {
//       
//       float4 position;               // Offset:  432
//       float4 direction;              // Offset:  448
//       float4 color;                  // Offset:  464
//       float range;                   // Offset:  480
//       float innerCorn;               // Offset:  484
//       float outerCorn;               // Offset:  488
//       float dummy;                   // Offset:  492
//
//   } spot_light[8];                   // Offset:  432 Size:   512 [unused]
//
// }
//
// cbuffer HEMISPHERE_LIGHT_CONSTANT_BUFFER
// {
//
//   float4 sky_color;                  // Offset:    0 Size:    16
//   float4 ground_color;               // Offset:   16 Size:    16
//   float4 hemisphere_weight;          // Offset:   32 Size:    16
//
// }
//
// cbuffer FOG_CONSTANT_BUFFER
// {
//
//   float4 fog_color;                  // Offset:    0 Size:    16
//   float4 fog_range;                  // Offset:   16 Size:    16
//
// }
//
// cbuffer SHADOWMAP_CONSTANT_BUFFER
// {
//
//   row_major float4x4 light_view_projection;// Offset:    0 Size:    64 [unused]
//   float3 shadow_color;               // Offset:   64 Size:    12
//   float shadow_bias;                 // Offset:   76 Size:     4
//
// }
//
// cbuffer CUBIC_COLOR_BUFFER
// {
//
//   float4 colorTop1;                  // Offset:    0 Size:    16
//   float4 colorBottom1;               // Offset:   16 Size:    16
//   float4 colorRight1;                // Offset:   32 Size:    16
//   float4 colorLeft1;                 // Offset:   48 Size:    16
//   float4 colorBack1;                 // Offset:   64 Size:    16
//   float4 colorFront1;                // Offset:   80 Size:    16
//   float4 colorTop2;                  // Offset:   96 Size:    16
//   float4 colorBottom2;               // Offset:  112 Size:    16
//   float4 colorRight2;                // Offset:  128 Size:    16
//   float4 colorLeft2;                 // Offset:  144 Size:    16
//   float4 colorBack2;                 // Offset:  160 Size:    16
//   float4 colorFront2;                // Offset:  176 Size:    16
//   float4 colorAlpha;                 // Offset:  192 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// color_sampler_state               sampler      NA          NA             s0      1 
// shadow_sampler_state              sampler      NA          NA             s4      1 
// color_map                         texture  float4          2d             t0      1 
// normal_map                        texture  float4          2d             t1      1 
// shadow_map                        texture  float4          2d             t4      1 
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
// HEMISPHERE_LIGHT_CONSTANT_BUFFER    cbuffer      NA          NA            cb4      1 
// FOG_CONSTANT_BUFFER               cbuffer      NA          NA            cb5      1 
// SHADOWMAP_CONSTANT_BUFFER         cbuffer      NA          NA            cb6      1 
// CUBIC_COLOR_BUFFER                cbuffer      NA          NA            cb7      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float   xyz 
// BINORMAL                 0   xyz         3     NONE   float   xyz 
// NORMAL                   0   xyz         4     NONE   float   xyz 
// TEXCOORD                 0   xy          5     NONE   float   xy  
// TEXCOORD                 1   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[7], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_constantbuffer CB2[3], immediateIndexed
dcl_constantbuffer CB4[3], immediateIndexed
dcl_constantbuffer CB5[2], immediateIndexed
dcl_constantbuffer CB6[5], immediateIndexed
dcl_constantbuffer CB7[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 20
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.world_position.x; v1.y <- pin.world_position.y; v1.z <- pin.world_position.z; v1.w <- pin.world_position.w; 
//   v2.x <- pin.tangent.x; v2.y <- pin.tangent.y; v2.z <- pin.tangent.z; 
//   v3.x <- pin.binormal.x; v3.y <- pin.binormal.y; v3.z <- pin.binormal.z; 
//   v4.x <- pin.normal.x; v4.y <- pin.normal.y; v4.z <- pin.normal.z; 
//   v5.x <- pin.texcoord.x; v5.y <- pin.texcoord.y; 
//   v6.x <- pin.shadow_texcoord.x; v6.y <- pin.shadow_texcoord.y; v6.z <- pin.shadow_texcoord.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 14 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\phong_shader_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v5.xyxx, t0.xyzw, s0  // r0.x <- diffuse_color.x; r0.y <- diffuse_color.y; r0.z <- diffuse_color.z; r0.w <- diffuse_color.w

#line 16
mov r1.xyz, -cb1[5].xyzx
add r1.xyz, r1.xyzx, v1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z

#line 17
dp3 r1.w, cb2[1].xyzx, cb2[1].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb2[1].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 21
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v3.xyzx
dp3 r1.w, v4.xyzx, v4.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, v4.xyzx
mov r6.x, r3.x  // r6.x <- mat._m00
mov r6.y, r4.x  // r6.y <- mat._m10
mov r6.z, r5.x  // r6.z <- mat._m20
mov r7.x, r3.y  // r7.x <- mat._m01
mov r7.y, r4.y  // r7.y <- mat._m11
mov r7.z, r5.y  // r7.z <- mat._m21
mov r5.x, r3.z  // r5.x <- mat._m02
mov r5.y, r4.z  // r5.y <- mat._m12
mov r5.z, r5.z  // r5.z <- mat._m22

#line 22
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t1.xyzw, s0
mov r3.xyz, r3.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 25
mul r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r4.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r4.x, r3.xyzx, r6.xyzx
dp3 r4.y, r3.xyzx, r7.xyzx
dp3 r4.z, r3.xyzx, r5.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx

#line 31
mul r4.xyz, cb0[4].xyzx, cb2[0].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 32
nop 
mov r3.xyz, r3.xyzx
itof r5.xyz, l(0, 1, 0, 0)
mov r6.xyz, cb4[0].xyzx
mov r7.xyz, cb4[1].xyzx
mov r1.w, cb4[2].x

#line 133 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\shading_functions.hlsli"
dp3 r2.w, r3.xyzx, r5.xyzx
mul r2.w, r2.w, l(0.500000)
add r2.w, r2.w, l(0.500000)  // r2.w <- facter

#line 134
mov r5.xyz, -r7.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r5.xyz, r2.wwww, r5.xyzx
add r5.xyz, r5.xyzx, r7.xyzx
mul r5.xyz, r1.wwww, r5.xyzx  // r5.x <- <CalcHemiSphereLight return value>.x; r5.y <- <CalcHemiSphereLight return value>.y; r5.z <- <CalcHemiSphereLight return value>.z

#line 32 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\phong_shader_ps.hlsl"
add r4.xyz, r4.xyzx, r5.xyzx

#line 34
nop 
mov r3.xyz, r3.xyzx
mov r2.xyz, r2.xyzx
mov r5.xyz, cb2[2].xyzx
mov r6.xyz, cb0[5].xyzx

#line 25 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\shading_functions.hlsli"
mov r7.xyz, -r2.xyzx
dp3 r1.w, r3.xyzx, r7.xyzx
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(1.000000)  // r1.w <- power

#line 26
mul r5.xyz, r1.wwww, r5.xyzx
mul r5.xyz, r6.xyzx, r5.xyzx  // r5.x <- <CalcLambert return value>.x; r5.y <- <CalcLambert return value>.y; r5.z <- <CalcLambert return value>.z

#line 34 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\phong_shader_ps.hlsl"
mov r5.xyz, r5.xyzx  // r5.x <- directional_diffuse.x; r5.y <- directional_diffuse.y; r5.z <- directional_diffuse.z

#line 35
nop 
mov r3.xyz, r3.xyzx
mov r2.xyz, r2.xyzx
mov r1.xyz, r1.xyzx
mov r6.xyz, cb2[2].xyzx
mov r7.xyz, cb0[6].xyzx

#line 41 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\shading_functions.hlsli"
dp3 r1.w, r2.xyzx, r3.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r8.xyz, r1.wwww, r3.xyzx
add r2.xyz, r2.xyzx, r8.xyzx  // r2.x <- R.x; r2.y <- R.y; r2.z <- R.z

#line 42
mov r1.xyz, -r1.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
itof r1.y, l(0)
max r1.x, r1.y, r1.x  // r1.x <- power

#line 43
itof r1.y, l(128)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x  // r1.x <- power

#line 45
mul r1.xyz, r1.xxxx, r6.xyzx
mul r1.xyz, r7.xyzx, r1.xyzx  // r1.x <- <CalcPhongSpeculer return value>.x; r1.y <- <CalcPhongSpeculer return value>.y; r1.z <- <CalcPhongSpeculer return value>.z

#line 35 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\phong_shader_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- directional_specular.x; r1.y <- directional_specular.y; r1.z <- directional_specular.z

#line 42
mov r2.xyzw, cb7[0].xyzw  // r2.x <- color1.colorTop.x; r2.y <- color1.colorTop.y; r2.z <- color1.colorTop.z; r2.w <- color1.colorTop.w

#line 43
mov r6.xyzw, cb7[1].xyzw  // r6.x <- color1.colorBottom.x; r6.y <- color1.colorBottom.y; r6.z <- color1.colorBottom.z; r6.w <- color1.colorBottom.w

#line 44
mov r7.xyzw, cb7[2].xyzw  // r7.x <- color1.colorRight.x; r7.y <- color1.colorRight.y; r7.z <- color1.colorRight.z; r7.w <- color1.colorRight.w

#line 45
mov r8.xyzw, cb7[3].xyzw  // r8.x <- color1.colorLeft.x; r8.y <- color1.colorLeft.y; r8.z <- color1.colorLeft.z; r8.w <- color1.colorLeft.w

#line 46
mov r9.xyzw, cb7[4].xyzw  // r9.x <- color1.colorBack.x; r9.y <- color1.colorBack.y; r9.z <- color1.colorBack.z; r9.w <- color1.colorBack.w

#line 47
mov r10.xyzw, cb7[5].xyzw  // r10.x <- color1.colorFront.x; r10.y <- color1.colorFront.y; r10.z <- color1.colorFront.z; r10.w <- color1.colorFront.w

#line 50
mov r11.xyzw, cb7[6].xyzw  // r11.x <- color2.colorTop.x; r11.y <- color2.colorTop.y; r11.z <- color2.colorTop.z; r11.w <- color2.colorTop.w

#line 51
mov r12.xyzw, cb7[7].xyzw  // r12.x <- color2.colorBottom.x; r12.y <- color2.colorBottom.y; r12.z <- color2.colorBottom.z; r12.w <- color2.colorBottom.w

#line 52
mov r13.xyzw, cb7[8].xyzw  // r13.x <- color2.colorRight.x; r13.y <- color2.colorRight.y; r13.z <- color2.colorRight.z; r13.w <- color2.colorRight.w

#line 53
mov r14.xyzw, cb7[9].xyzw  // r14.x <- color2.colorLeft.x; r14.y <- color2.colorLeft.y; r14.z <- color2.colorLeft.z; r14.w <- color2.colorLeft.w

#line 54
mov r15.xyzw, cb7[10].xyzw  // r15.x <- color2.colorBack.x; r15.y <- color2.colorBack.y; r15.z <- color2.colorBack.z; r15.w <- color2.colorBack.w

#line 55
mov r16.xyzw, cb7[11].xyzw  // r16.x <- color2.colorFront.x; r16.y <- color2.colorFront.y; r16.z <- color2.colorFront.z; r16.w <- color2.colorFront.w

#line 59
mov r4.xyz, r4.xyzx  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z
mov r0.w, r0.w  // r0.w <- color.w

#line 60
mul r5.xyz, r0.xyzx, r5.xyzx
add r4.xyz, r4.xyzx, r5.xyzx

#line 61
add r0.xyz, r1.xyzx, r4.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 62
nop 
mov r0.xyz, r0.xyzx
mov r0.w, r0.w
mov r3.xyz, r3.xyzx
mov r2.xyzw, r2.xyzw
mov r6.xyzw, r6.xyzw
mov r7.xyzw, r7.xyzw
mov r8.xyzw, r8.xyzw
mov r9.xyzw, r9.xyzw
mov r10.xyzw, r10.xyzw
mov r11.xyzw, r11.xyzw
mov r12.xyzw, r12.xyzw
mov r13.xyzw, r13.xyzw
mov r14.xyzw, r14.xyzw
mov r15.xyzw, r15.xyzw
mov r16.xyzw, r16.xyzw
mov r1.x, cb7[12].w

#line 290 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\shading_functions.hlsli"
itof r1.yzw, l(0, 0, 1, 0)  // r1.y <- vecTop.x; r1.z <- vecTop.y; r1.w <- vecTop.z

#line 291
itof r4.xyz, l(0, -1, 0, 0)  // r4.x <- vecBottom.x; r4.y <- vecBottom.y; r4.z <- vecBottom.z

#line 292
itof r5.xyz, l(1, 0, 0, 0)  // r5.x <- vecRight.x; r5.y <- vecRight.y; r5.z <- vecRight.z

#line 293
itof r17.xyz, l(-1, 0, 0, 0)  // r17.x <- vecLeft.x; r17.y <- vecLeft.y; r17.z <- vecLeft.z

#line 294
itof r18.xyz, l(0, 0, 1, 0)  // r18.x <- vecBack.x; r18.y <- vecBack.y; r18.z <- vecBack.z

#line 295
itof r19.xyz, l(0, 0, -1, 0)  // r19.x <- vecFront.x; r19.y <- vecFront.y; r19.z <- vecFront.z

#line 298
itof r3.w, l(0)
dp3 r1.y, r3.xyzx, r1.yzwy
max r1.y, r1.y, r3.w  // r1.y <- dirTop

#line 299
itof r1.z, l(0)
dp3 r1.w, r3.xyzx, r4.xyzx
max r1.z, r1.w, r1.z  // r1.z <- dirBottom

#line 300
itof r1.w, l(0)
dp3 r3.w, r3.xyzx, r5.xyzx
max r1.w, r1.w, r3.w  // r1.w <- dirRight

#line 301
itof r3.w, l(0)
dp3 r4.x, r3.xyzx, r17.xyzx
max r3.w, r3.w, r4.x  // r3.w <- dirLeft

#line 302
itof r4.x, l(0)
dp3 r4.y, r3.xyzx, r18.xyzx
max r4.x, r4.y, r4.x  // r4.x <- dirBack

#line 303
itof r4.y, l(0)
dp3 r3.x, r3.xyzx, r19.xyzx
max r3.x, r3.x, r4.y  // r3.x <- dirFront

#line 308
mov r5.xyzw, -r2.xyzw
add r5.xyzw, r5.xyzw, r11.xyzw
mul r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r2.xyzw, r2.xyzw, r5.xyzw  // r2.x <- colorTop.x; r2.y <- colorTop.y; r2.z <- colorTop.z; r2.w <- colorTop.w

#line 311
mov r5.xyzw, -r6.xyzw
add r5.xyzw, r5.xyzw, r12.xyzw
mul r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r5.xyzw, r5.xyzw, r6.xyzw  // r5.x <- colorBottom.x; r5.y <- colorBottom.y; r5.z <- colorBottom.z; r5.w <- colorBottom.w

#line 314
mov r6.xyzw, -r7.xyzw
add r6.xyzw, r6.xyzw, r13.xyzw
mul r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- colorRight.x; r6.y <- colorRight.y; r6.z <- colorRight.z; r6.w <- colorRight.w

#line 317
mov r7.xyzw, -r8.xyzw
add r7.xyzw, r7.xyzw, r14.xyzw
mul r7.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r7.xyzw, r7.xyzw, r8.xyzw  // r7.x <- colorLeft.x; r7.y <- colorLeft.y; r7.z <- colorLeft.z; r7.w <- colorLeft.w

#line 320
mov r8.xyzw, -r9.xyzw
add r8.xyzw, r8.xyzw, r15.xyzw
mul r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r8.xyzw, r8.xyzw, r9.xyzw  // r8.x <- colorBack.x; r8.y <- colorBack.y; r8.z <- colorBack.z; r8.w <- colorBack.w

#line 323
mov r9.xyzw, -r10.xyzw
add r9.xyzw, r9.xyzw, r16.xyzw
mul r9.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r9.xyzw, r9.xyzw, r10.xyzw  // r9.x <- colorFront.x; r9.y <- colorFront.y; r9.z <- colorFront.z; r9.w <- colorFront.w

#line 328
itof r10.xyzw, l(1, 1, 1, 1)  // r10.x <- white.x; r10.y <- white.y; r10.z <- white.z; r10.w <- white.w

#line 330
itof r3.y, l(1)
mov r1.y, -r1.y
add r1.y, r1.y, r3.y
mov r11.xyzw, -r2.xyzw
add r11.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, r1.yyyy, r11.xyzw
add r2.xyzw, r2.xyzw, r11.xyzw
itof r1.y, l(1)
mov r1.z, -r1.z
add r1.y, r1.z, r1.y
mov r11.xyzw, -r5.xyzw
add r11.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, r1.yyyy, r11.xyzw
add r5.xyzw, r5.xyzw, r11.xyzw
mul r2.xyzw, r2.xyzw, r5.xyzw
itof r1.y, l(1)
mov r1.z, -r1.w
add r1.y, r1.z, r1.y
mov r5.xyzw, -r6.xyzw
add r5.xyzw, r5.xyzw, r10.xyzw
mul r5.xyzw, r1.yyyy, r5.xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r2.xyzw, r2.xyzw, r5.xyzw
itof r1.y, l(1)
mov r1.z, -r3.w
add r1.y, r1.z, r1.y
mov r5.xyzw, -r7.xyzw
add r5.xyzw, r5.xyzw, r10.xyzw
mul r5.xyzw, r1.yyyy, r5.xyzw
add r5.xyzw, r5.xyzw, r7.xyzw
mul r2.xyzw, r2.xyzw, r5.xyzw
itof r1.y, l(1)
mov r1.z, -r4.x
add r1.y, r1.z, r1.y
mov r4.xyzw, -r8.xyzw
add r4.xyzw, r4.xyzw, r10.xyzw
mul r4.xyzw, r1.yyyy, r4.xyzw
add r4.xyzw, r4.xyzw, r8.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
itof r1.y, l(1)
mov r1.z, -r3.x
add r1.y, r1.z, r1.y
mov r3.xyzw, -r9.xyzw
add r3.xyzw, r3.xyzw, r10.xyzw
mul r3.xyzw, r1.yyyy, r3.xyzw
add r3.xyzw, r3.xyzw, r9.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
add r2.xyzw, r0.xyzw, r2.xyzw  // r2.x <- newColor.x; r2.y <- newColor.y; r2.z <- newColor.z; r2.w <- newColor.w

#line 334
mov r3.xyzw, -r0.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.xxxx, r2.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- <CubicColor return value>.x; r0.y <- <CubicColor return value>.y; r0.z <- <CubicColor return value>.z; r0.w <- <CubicColor return value>.w

#line 62 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\phong_shader_ps.hlsl"
mov r0.xyzw, r0.xyzw  // r0.w <- color.w; r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 63
nop 
mov r0.xyzw, r0.xyzw
mov r1.xyzw, cb5[0].xyzw
mov r2.xy, cb5[1].xyxx
mov r3.xyz, -cb1[5].xyzx
add r3.xyz, r3.xyzx, v1.xyzx
dp3 r2.z, r3.xyzx, r3.xyzx
sqrt r2.z, r2.z

#line 149 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\shading_functions.hlsli"
mov r2.w, -r2.x
add r2.z, r2.w, r2.z
mov r2.x, -r2.x
add r2.x, r2.x, r2.y
div r2.x, r2.z, r2.x
max r2.x, r2.x, l(0.000000)
min r2.x, r2.x, l(1.000000)  // r2.x <- fogAlpha

#line 151
mov r3.xyzw, -r0.xyzw
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, r2.xxxx
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- <CalcFog return value>.x; r0.y <- <CalcFog return value>.y; r0.z <- <CalcFog return value>.z; r0.w <- <CalcFog return value>.w

#line 63 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\phong_shader_ps.hlsl"
mov r0.xyzw, r0.xyzw  // r0.w <- color.w; r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 66
sample_indexable(texture2d)(float,float,float,float) r1.x, v6.xyxx, t4.xyzw, s4
mov r1.x, r1.x  // r1.x <- depth

#line 68
mov r1.x, -r1.x
add r1.x, r1.x, v6.z
lt r1.x, cb6[4].w, r1.x
if_nz r1.x

#line 70
  mul r0.xyz, r0.xyzx, cb6[4].xyzx

#line 71
endif 

#line 74
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 255 instruction slots used
