//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64 [unused]
//   float4 ambientLightColor;          // Offset:   80 Size:    16
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32
//   row_major float4x4 world;          // Offset:  128 Size:    64 [unused]
//
// }
//
// cbuffer CbShadowmap
// {
//
//   row_major float4x4 lightViewProjection;// Offset:    0 Size:    64 [unused]
//   float3 shadowColor;                // Offset:   64 Size:    12
//   float shadowBias;                  // Offset:   76 Size:     4
//
// }
//
// cbuffer CbFog
// {
//
//   float4 fogColor;                   // Offset:    0 Size:    16
//   float4 fogRange;                   // Offset:   16 Size:    16
//
// }
//
// cbuffer CbCubicColor
// {
//
//   float4 rightVec;                   // Offset:    0 Size:    16
//   float4 topVec;                     // Offset:   16 Size:    16
//   float4 frontVec;                   // Offset:   32 Size:    16
//   float4 colorTop1;                  // Offset:   48 Size:    16
//   float4 colorBottom1;               // Offset:   64 Size:    16
//   float4 colorRight1;                // Offset:   80 Size:    16
//   float4 colorLeft1;                 // Offset:   96 Size:    16
//   float4 colorBack1;                 // Offset:  112 Size:    16
//   float4 colorFront1;                // Offset:  128 Size:    16
//   float4 colorTop2;                  // Offset:  144 Size:    16
//   float4 colorBottom2;               // Offset:  160 Size:    16
//   float4 colorRight2;                // Offset:  176 Size:    16
//   float4 colorLeft2;                 // Offset:  192 Size:    16
//   float4 colorBack2;                 // Offset:  208 Size:    16
//   float4 colorFront2;                // Offset:  224 Size:    16
//   float4 colorAlpha;                 // Offset:  240 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// colorSamplerState                 sampler      NA          NA             s0      1 
// shadowMapSamplerState             sampler      NA          NA             s1      1 
// colorMap                          texture  float4          2d             t0      1 
// shadowMap                         texture  float4          2d             t2      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbShadowmap                       cbuffer      NA          NA            cb3      1 
// CbFog                             cbuffer      NA          NA            cb4      1 
// CbCubicColor                      cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyz         3     NONE   float       
// BINORMAL                 0   xyz         4     NONE   float       
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float       
// TEXCOORD                 1   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB3[5], immediateIndexed
dcl_constantbuffer CB4[2], immediateIndexed
dcl_constantbuffer CB5[16], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 20
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.worldPosition.x; v1.y <- pin.worldPosition.y; v1.z <- pin.worldPosition.z; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.tangent.x; v3.y <- pin.tangent.y; v3.z <- pin.tangent.z; 
//   v4.x <- pin.binormal.x; v4.y <- pin.binormal.y; v4.z <- pin.binormal.z; 
//   v5.x <- pin.texcoord.x; v5.y <- pin.texcoord.y; 
//   v6.x <- pin.color.x; v6.y <- pin.color.y; v6.z <- pin.color.z; v6.w <- pin.color.w; 
//   v7.x <- pin.shadowTexcoord.x; v7.y <- pin.shadowTexcoord.y; v7.z <- pin.shadowTexcoord.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 12 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\CubicColorPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v5.xyxx, t0.xyzw, s0  // r0.x <- diffuse_color.x; r0.y <- diffuse_color.y; r0.z <- diffuse_color.z; r0.w <- diffuse_color.w

#line 14
dp3 r1.x, cb0[6].xyzx, cb0[6].xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, cb0[6].xyzx  // r1.x <- L.x; r1.y <- L.y; r1.z <- L.z

#line 15
mov r2.xyz, -v1.xyzx
add r2.xyz, r2.xyzx, cb0[0].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 16
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 25
itof r4.xyz, l(1, 1, 1, 0)  // r4.x <- ka.x; r4.y <- ka.y; r4.z <- ka.z

#line 26
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- kd.x; r5.y <- kd.y; r5.z <- kd.z

#line 31
mul r4.xyz, r4.xyzx, cb0[5].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 34
nop 
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r6.xyz, cb0[7].xyzx
mov r5.xyz, r5.xyzx

#line 59 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\ShadingFunctions.hlsli"
mov r7.xyz, -r1.xyzx
dp3 r1.w, r3.xyzx, r7.xyzx
mul r1.w, r1.w, l(0.500000)
add r1.w, r1.w, l(0.500000)
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(1.000000)  // r1.w <- D

#line 61
mul r6.xyz, r1.wwww, r6.xyzx
mul r6.xyz, r5.xyzx, r6.xyzx  // r6.x <- <CalcHalfLambert return value>.x; r6.y <- <CalcHalfLambert return value>.y; r6.z <- <CalcHalfLambert return value>.z

#line 34 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\CubicColorPS.hlsl"
mov r6.xyz, r6.xyzx  // r6.x <- directionalDiffuse.x; r6.y <- directionalDiffuse.y; r6.z <- directionalDiffuse.z

#line 35
nop 
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, -r2.xyzx
mov r7.xyz, cb0[7].xyzx
mov r5.xyz, r5.xyzx

#line 41 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\ShadingFunctions.hlsli"
dp3 r1.w, r1.xyzx, r3.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r8.xyz, r1.wwww, r3.xyzx
add r1.xyz, r1.xyzx, r8.xyzx  // r1.x <- R.x; r1.y <- R.y; r1.z <- R.z

#line 42
mov r2.xyz, -r2.xyzx
dp3 r1.x, r2.xyzx, r1.xyzx
itof r1.y, l(0)
max r1.x, r1.y, r1.x  // r1.x <- power

#line 43
itof r1.y, l(128)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x  // r1.x <- power

#line 45
mul r1.xyz, r1.xxxx, r7.xyzx
mul r1.xyz, r5.xyzx, r1.xyzx  // r1.x <- <CalcPhongSpeculer return value>.x; r1.y <- <CalcPhongSpeculer return value>.y; r1.z <- <CalcPhongSpeculer return value>.z

#line 35 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\CubicColorPS.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- directionalSpecular.x; r1.y <- directionalSpecular.y; r1.z <- directionalSpecular.z

#line 37
nop 
nop 
nop 
mov r1.w, v7.z
mov r2.xyz, cb3[4].xyzx
mov r2.w, cb3[4].w

#line 43 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\ShadowmapFunctions.hlsli"
sample_indexable(texture2d)(float,float,float,float) r3.w, v7.xyxx, t2.yzwx, s1
mov r3.w, r3.w  // r3.w <- depth

#line 46
mov r3.w, -r3.w
add r1.w, r1.w, r3.w
ge r1.w, r2.w, r1.w
movc r1.w, r1.w, l(1.000000), l(0)  // r1.w <- shadow

#line 48
itof r5.xyz, l(1, 1, 1, 0)
mov r7.xyz, -r2.xyzx
add r5.xyz, r5.xyzx, r7.xyzx
mul r5.xyz, r1.wwww, r5.xyzx
add r2.xyz, r2.xyzx, r5.xyzx  // r2.x <- <CalcShadowColor return value>.x; r2.y <- <CalcShadowColor return value>.y; r2.z <- <CalcShadowColor return value>.z

#line 37 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\CubicColorPS.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- shadow.x; r2.y <- shadow.y; r2.z <- shadow.z

#line 38
mul r5.xyz, r2.xyzx, r6.xyzx  // r5.x <- directionalDiffuse.x; r5.y <- directionalDiffuse.y; r5.z <- directionalDiffuse.z

#line 39
mul r1.xyz, r1.xyzx, r2.xyzx

#line 44
mov r2.xyzw, cb5[3].xyzw  // r2.x <- color1.colorTop.x; r2.y <- color1.colorTop.y; r2.z <- color1.colorTop.z; r2.w <- color1.colorTop.w

#line 45
mov r6.xyzw, cb5[4].xyzw  // r6.x <- color1.colorBottom.x; r6.y <- color1.colorBottom.y; r6.z <- color1.colorBottom.z; r6.w <- color1.colorBottom.w

#line 46
mov r7.xyzw, cb5[5].xyzw  // r7.x <- color1.colorRight.x; r7.y <- color1.colorRight.y; r7.z <- color1.colorRight.z; r7.w <- color1.colorRight.w

#line 47
mov r8.xyzw, cb5[6].xyzw  // r8.x <- color1.colorLeft.x; r8.y <- color1.colorLeft.y; r8.z <- color1.colorLeft.z; r8.w <- color1.colorLeft.w

#line 48
mov r9.xyzw, cb5[7].xyzw  // r9.x <- color1.colorBack.x; r9.y <- color1.colorBack.y; r9.z <- color1.colorBack.z; r9.w <- color1.colorBack.w

#line 49
mov r10.xyzw, cb5[8].xyzw  // r10.x <- color1.colorFront.x; r10.y <- color1.colorFront.y; r10.z <- color1.colorFront.z; r10.w <- color1.colorFront.w

#line 52
mov r11.xyzw, cb5[9].xyzw  // r11.x <- color2.colorTop.x; r11.y <- color2.colorTop.y; r11.z <- color2.colorTop.z; r11.w <- color2.colorTop.w

#line 53
mov r12.xyzw, cb5[10].xyzw  // r12.x <- color2.colorBottom.x; r12.y <- color2.colorBottom.y; r12.z <- color2.colorBottom.z; r12.w <- color2.colorBottom.w

#line 54
mov r13.xyzw, cb5[11].xyzw  // r13.x <- color2.colorRight.x; r13.y <- color2.colorRight.y; r13.z <- color2.colorRight.z; r13.w <- color2.colorRight.w

#line 55
mov r14.xyzw, cb5[12].xyzw  // r14.x <- color2.colorLeft.x; r14.y <- color2.colorLeft.y; r14.z <- color2.colorLeft.z; r14.w <- color2.colorLeft.w

#line 56
mov r15.xyzw, cb5[13].xyzw  // r15.x <- color2.colorBack.x; r15.y <- color2.colorBack.y; r15.z <- color2.colorBack.z; r15.w <- color2.colorBack.w

#line 57
mov r16.xyzw, cb5[14].xyzw  // r16.x <- color2.colorFront.x; r16.y <- color2.colorFront.y; r16.z <- color2.colorFront.z; r16.w <- color2.colorFront.w

#line 59
mov r4.xyz, r4.xyzx  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z
mov r0.w, r0.w  // r0.w <- color.w

#line 61
mul r5.xyz, r0.xyzx, r5.xyzx
add r4.xyz, r4.xyzx, r5.xyzx

#line 62
add r0.xyz, r1.xyzx, r4.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 64
nop 
mov r0.xyz, r0.xyzx
mov r0.w, r0.w
mov r3.xyz, r3.xyzx
mov r2.xyzw, r2.xyzw
mov r6.xyzw, r6.xyzw
mov r7.xyzw, r7.xyzw
mov r8.xyzw, r8.xyzw
mov r9.xyzw, r9.xyzw
mov r10.xyzw, r10.xyzw
mov r11.xyzw, r11.xyzw
mov r12.xyzw, r12.xyzw
mov r13.xyzw, r13.xyzw
mov r14.xyzw, r14.xyzw
mov r15.xyzw, r15.xyzw
mov r16.xyzw, r16.xyzw
mov r1.x, cb5[15].w
mov r1.yzw, cb5[0].xxyz
mov r4.xyz, cb5[1].xyzx
mov r5.xyz, cb5[2].xyzx

#line 290 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\ShadingFunctions.hlsli"
mov r1.yzw, r1.yyzw  // r1.y <- vecRight.x; r1.z <- vecRight.y; r1.w <- vecRight.z

#line 291
mov r4.xyz, r4.xyzx  // r4.x <- vecTop.x; r4.y <- vecTop.y; r4.z <- vecTop.z

#line 292
mov r5.xyz, r5.xyzx  // r5.x <- vecFront.x; r5.y <- vecFront.y; r5.z <- vecFront.z

#line 294
itof r17.xyz, l(-1, -1, -1, 0)
mul r17.xyz, r1.yzwy, r17.xyzx  // r17.x <- vecLeft.x; r17.y <- vecLeft.y; r17.z <- vecLeft.z

#line 295
itof r18.xyz, l(-1, -1, -1, 0)
mul r18.xyz, r4.xyzx, r18.xyzx  // r18.x <- vecBottom.x; r18.y <- vecBottom.y; r18.z <- vecBottom.z

#line 296
itof r19.xyz, l(-1, -1, -1, 0)
mul r19.xyz, r5.xyzx, r19.xyzx  // r19.x <- vecBack.x; r19.y <- vecBack.y; r19.z <- vecBack.z

#line 299
dp3 r3.w, r1.yzwy, r1.yzwy
rsq r3.w, r3.w
mul r1.yzw, r1.yyzw, r3.wwww

#line 300
dp3 r3.w, r4.xyzx, r4.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r4.xyzx

#line 301
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, r5.xyzx

#line 302
dp3 r3.w, r17.xyzx, r17.xyzx
rsq r3.w, r3.w
mul r17.xyz, r3.wwww, r17.xyzx

#line 303
dp3 r3.w, r18.xyzx, r18.xyzx
rsq r3.w, r3.w
mul r18.xyz, r3.wwww, r18.xyzx

#line 304
dp3 r3.w, r19.xyzx, r19.xyzx
rsq r3.w, r3.w
mul r19.xyz, r3.wwww, r19.xyzx

#line 307
itof r3.w, l(0)
dp3 r4.x, r3.xyzx, r4.xyzx
max r3.w, r3.w, r4.x  // r3.w <- dirTop

#line 308
itof r4.x, l(0)
dp3 r4.y, r3.xyzx, r18.xyzx
max r4.x, r4.y, r4.x  // r4.x <- dirBottom

#line 309
itof r4.y, l(0)
dp3 r1.y, r3.xyzx, r1.yzwy
max r1.y, r1.y, r4.y  // r1.y <- dirRight

#line 310
itof r1.z, l(0)
dp3 r1.w, r3.xyzx, r17.xyzx
max r1.z, r1.w, r1.z  // r1.z <- dirLeft

#line 311
itof r1.w, l(0)
dp3 r4.y, r3.xyzx, r19.xyzx
max r1.w, r1.w, r4.y  // r1.w <- dirBack

#line 312
itof r4.y, l(0)
dp3 r3.x, r3.xyzx, r5.xyzx
max r3.x, r3.x, r4.y  // r3.x <- dirFront

#line 317
mov r5.xyzw, -r2.xyzw
add r5.xyzw, r5.xyzw, r11.xyzw
mul r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r2.xyzw, r2.xyzw, r5.xyzw  // r2.x <- colorTop.x; r2.y <- colorTop.y; r2.z <- colorTop.z; r2.w <- colorTop.w

#line 320
mov r5.xyzw, -r6.xyzw
add r5.xyzw, r5.xyzw, r12.xyzw
mul r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r5.xyzw, r5.xyzw, r6.xyzw  // r5.x <- colorBottom.x; r5.y <- colorBottom.y; r5.z <- colorBottom.z; r5.w <- colorBottom.w

#line 323
mov r6.xyzw, -r7.xyzw
add r6.xyzw, r6.xyzw, r13.xyzw
mul r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- colorRight.x; r6.y <- colorRight.y; r6.z <- colorRight.z; r6.w <- colorRight.w

#line 326
mov r7.xyzw, -r8.xyzw
add r7.xyzw, r7.xyzw, r14.xyzw
mul r7.xyzw, r7.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r7.xyzw, r7.xyzw, r8.xyzw  // r7.x <- colorLeft.x; r7.y <- colorLeft.y; r7.z <- colorLeft.z; r7.w <- colorLeft.w

#line 329
mov r8.xyzw, -r9.xyzw
add r8.xyzw, r8.xyzw, r15.xyzw
mul r8.xyzw, r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r8.xyzw, r8.xyzw, r9.xyzw  // r8.x <- colorBack.x; r8.y <- colorBack.y; r8.z <- colorBack.z; r8.w <- colorBack.w

#line 332
mov r9.xyzw, -r10.xyzw
add r9.xyzw, r9.xyzw, r16.xyzw
mul r9.xyzw, r9.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r9.xyzw, r9.xyzw, r10.xyzw  // r9.x <- colorFront.x; r9.y <- colorFront.y; r9.z <- colorFront.z; r9.w <- colorFront.w

#line 337
itof r10.xyzw, l(1, 1, 1, 1)  // r10.x <- white.x; r10.y <- white.y; r10.z <- white.z; r10.w <- white.w

#line 339
itof r3.y, l(1)
mov r3.z, -r3.w
add r3.y, r3.z, r3.y
mov r11.xyzw, -r2.xyzw
add r11.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, r3.yyyy, r11.xyzw
add r2.xyzw, r2.xyzw, r11.xyzw
itof r3.y, l(1)
mov r3.z, -r4.x
add r3.y, r3.z, r3.y
mov r4.xyzw, -r5.xyzw
add r4.xyzw, r4.xyzw, r10.xyzw
mul r4.xyzw, r3.yyyy, r4.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
itof r3.y, l(1)
mov r1.y, -r1.y
add r1.y, r1.y, r3.y
mov r4.xyzw, -r6.xyzw
add r4.xyzw, r4.xyzw, r10.xyzw
mul r4.xyzw, r1.yyyy, r4.xyzw
add r4.xyzw, r4.xyzw, r6.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
itof r1.y, l(1)
mov r1.z, -r1.z
add r1.y, r1.z, r1.y
mov r4.xyzw, -r7.xyzw
add r4.xyzw, r4.xyzw, r10.xyzw
mul r4.xyzw, r1.yyyy, r4.xyzw
add r4.xyzw, r4.xyzw, r7.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
itof r1.y, l(1)
mov r1.z, -r1.w
add r1.y, r1.z, r1.y
mov r4.xyzw, -r8.xyzw
add r4.xyzw, r4.xyzw, r10.xyzw
mul r4.xyzw, r1.yyyy, r4.xyzw
add r4.xyzw, r4.xyzw, r8.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
itof r1.y, l(1)
mov r1.z, -r3.x
add r1.y, r1.z, r1.y
mov r3.xyzw, -r9.xyzw
add r3.xyzw, r3.xyzw, r10.xyzw
mul r3.xyzw, r1.yyyy, r3.xyzw
add r3.xyzw, r3.xyzw, r9.xyzw
mul r2.xyzw, r2.xyzw, r3.xyzw
add r2.xyzw, r0.xyzw, r2.xyzw  // r2.x <- newColor.x; r2.y <- newColor.y; r2.z <- newColor.z; r2.w <- newColor.w

#line 343
mov r3.xyzw, -r0.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.xxxx, r2.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- <CubicColor return value>.x; r0.y <- <CubicColor return value>.y; r0.z <- <CubicColor return value>.z; r0.w <- <CubicColor return value>.w

#line 64 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\CubicColorPS.hlsl"
mov r0.xyzw, r0.xyzw  // r0.w <- color.w; r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 65
nop 
mov r0.xyzw, r0.xyzw
mov r1.xyzw, cb4[0].xyzw
mov r2.xy, cb4[1].xyxx
mov r3.xyz, -cb0[0].xyzx
add r3.xyz, r3.xyzx, v1.xyzx
dp3 r2.z, r3.xyzx, r3.xyzx
sqrt r2.z, r2.z

#line 149 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\ShadingFunctions.hlsli"
mov r2.w, -r2.x
add r2.z, r2.w, r2.z
mov r2.x, -r2.x
add r2.x, r2.x, r2.y
div r2.x, r2.z, r2.x
max r2.x, r2.x, l(0.000000)
min r2.x, r2.x, l(1.000000)  // r2.x <- fogAlpha

#line 151
mov r3.xyzw, -r0.xyzw
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, r2.xxxx
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- <CalcFog return value>.x; r0.y <- <CalcFog return value>.y; r0.z <- <CalcFog return value>.z; r0.w <- <CalcFog return value>.w

#line 65 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\CubicColorPS.hlsl"
mov r0.xyzw, r0.xyzw  // r0.w <- color.w; r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 70
mov o0.xyzw, r0.xyzw
ret 
// Approximately 253 instruction slots used
