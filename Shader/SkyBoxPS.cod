//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64 [unused]
//   float4 ambientLightColor;          // Offset:   80 Size:    16 [unused]
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32 [unused]
//   row_major float4x4 world;          // Offset:  128 Size:    64 [unused]
//
// }
//
// cbuffer CbSky
// {
//
//   float skyValue;                    // Offset:    0 Size:     4
//   float3 dummy;                      // Offset:    4 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sample0                           sampler      NA          NA             s0      1 
// tex0                              texture  float4          2d             t0      1 
// skyMap                            texture  float4          2d             t1      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbSky                             cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.worldPosition.x; v1.y <- pin.worldPosition.y; v1.z <- pin.worldPosition.z; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.texcoord.x; v3.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 10 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\SkyBoxPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- diffeseColor.x; r0.y <- diffeseColor.y; r0.z <- diffeseColor.z; r0.w <- diffeseColor.w

#line 12
mov r1.xyz, -cb0[0].xyzx
add r1.xyz, r1.xyzx, v2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z

#line 13
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v2.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 15
mov r0.xyzw, r0.xyzw  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 17
nop 
nop 
nop 
mov r0.xyz, r0.xyzx
mov r2.xyz, r2.xyzx
mov r1.xyz, r1.xyzx
mov r1.w, cb2[0].x

#line 114 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\ShadingFunctions.hlsli"
dp3 r1.z, r1.xyzx, r2.xyzx
add r1.z, r1.z, r1.z
mov r1.z, -r1.z
mul r2.xy, r1.zzzz, r2.xyxx
add r1.xy, r1.xyxx, r2.xyxx  // r1.x <- R.x; r1.y <- R.y

#line 115
mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r1.x <- texcoord.x; r1.y <- texcoord.y

#line 117
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t1.xyzw, s0
mov r2.xyz, -r0.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r1.wwww
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- <CalcSphereEnvironment return value>.x; r0.y <- <CalcSphereEnvironment return value>.y; r0.z <- <CalcSphereEnvironment return value>.z

#line 17 "C:\Users\2210131\Desktop\github\MyProduction2\HLSL\SkyBoxPS.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 19
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 33 instruction slots used
